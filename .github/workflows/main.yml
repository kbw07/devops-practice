name: project deployment
on:
  push:
    branches: [main]
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Build jar with Gradle (uses build cache)
        uses: gradle/actions/setup-gradle@v4

      - name: Gradle build
        run: |
          chmod +x ./gradlew
          ./gradlew clean bootJar

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/back:latest

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download image by Docker Hub and Run
        uses: appleboy/ssh-action@v1
        with:
          host: 121.140.125.176
          username: test
          password: qwer1234
          port: 127
          script: |
            if docker ps --format "table {{.Names}}\t{{.Ports}}" | grep -q "8080->8080"; then
                OLD_PORT=8080
                NEW_PORT=8081
                OLD_NAME="back"
                NEW_NAME="back-green"
            else
                OLD_PORT=8081
                NEW_PORT=8080
                OLD_NAME="back-green"
                NEW_NAME="back"
            fi
            
            echo "기존: $OLD_PORT, 새로운: $NEW_PORT"

            # 1. 새 컨테이너 시작
            docker run -d --name $NEW_NAME -p $NEW_PORT:8080 ${{ secrets.DOCKERHUB_USERNAME }}/back:latest

            # 2. 헬스체크
            echo "새 서버 헬스체크 중..."
            while ! curl -f http://localhost:$NEW_PORT >/dev/null 2>&1; do 
                sleep 1
            done
            echo "새 서버 준비 완료!"

            # 3. nginx upstream 포트 변경
            sudo sed -i "s/server localhost:$OLD_PORT;/server localhost:$NEW_PORT;/" /etc/nginx/sites-available/default

            # 4. nginx 리로드 (무중단)
            sudo nginx -s reload

            # 5. 기존 컨테이너 정리
            docker stop $OLD_NAME
            docker rm $OLD_NAME

            echo "배포 완료: $NEW_PORT 포트로 전환"
            

#          script: |
#            docker stop back || true
#            docker rm back || true
#            docker image rm ${{ secrets.DOCKERHUB_USERNAME }}/back:latest
#
#            docker image prune -f || true
#
#            docker build --tag ${{ secrets.DOCKERHUB_USERNAME }}/back:latest .
#
#            docker run -d --name back -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/back:latest